/*
* generated by Xtext
*/
grammar InternalTuringMachine;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package it.marcotinacci.turingmachine.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package it.marcotinacci.turingmachine.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import it.marcotinacci.turingmachine.services.TuringMachineGrammarAccess;

}

@parser::members {
 
 	private TuringMachineGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(TuringMachineGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleMachine
entryRuleMachine 
:
{ before(grammarAccess.getMachineRule()); }
	 ruleMachine
{ after(grammarAccess.getMachineRule()); } 
	 EOF 
;

// Rule Machine
ruleMachine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMachineAccess().getGroup()); }
(rule__Machine__Group__0)
{ after(grammarAccess.getMachineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSymbol
entryRuleSymbol 
:
{ before(grammarAccess.getSymbolRule()); }
	 ruleSymbol
{ after(grammarAccess.getSymbolRule()); } 
	 EOF 
;

// Rule Symbol
ruleSymbol
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSymbolAccess().getNameAssignment()); }
(rule__Symbol__NameAssignment)
{ after(grammarAccess.getSymbolAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getGroup()); }
(rule__State__Group__0)
{ after(grammarAccess.getStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransaction
entryRuleTransaction 
:
{ before(grammarAccess.getTransactionRule()); }
	 ruleTransaction
{ after(grammarAccess.getTransactionRule()); } 
	 EOF 
;

// Rule Transaction
ruleTransaction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransactionAccess().getGroup()); }
(rule__Transaction__Group__0)
{ after(grammarAccess.getTransactionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReadWriteSymbol
entryRuleReadWriteSymbol 
:
{ before(grammarAccess.getReadWriteSymbolRule()); }
	 ruleReadWriteSymbol
{ after(grammarAccess.getReadWriteSymbolRule()); } 
	 EOF 
;

// Rule ReadWriteSymbol
ruleReadWriteSymbol
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReadWriteSymbolAccess().getAlternatives()); }
(rule__ReadWriteSymbol__Alternatives)
{ after(grammarAccess.getReadWriteSymbolAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Transaction__Alternatives_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getMoveAssignment_3_1_0()); }
(rule__Transaction__MoveAssignment_3_1_0)
{ after(grammarAccess.getTransactionAccess().getMoveAssignment_3_1_0()); }
)

    |(
{ before(grammarAccess.getTransactionAccess().getMoveAssignment_3_1_1()); }
(rule__Transaction__MoveAssignment_3_1_1)
{ after(grammarAccess.getTransactionAccess().getMoveAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getGroup_4_0()); }
(rule__Transaction__Group_4_0__0)
{ after(grammarAccess.getTransactionAccess().getGroup_4_0()); }
)

    |(
{ before(grammarAccess.getTransactionAccess().getFinalAssignment_4_1()); }
(rule__Transaction__FinalAssignment_4_1)
{ after(grammarAccess.getTransactionAccess().getFinalAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReadWriteSymbol__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadWriteSymbolAccess().getSymbolAssignment_0()); }
(rule__ReadWriteSymbol__SymbolAssignment_0)
{ after(grammarAccess.getReadWriteSymbolAccess().getSymbolAssignment_0()); }
)

    |(
{ before(grammarAccess.getReadWriteSymbolAccess().getEmptyAssignment_1()); }
(rule__ReadWriteSymbol__EmptyAssignment_1)
{ after(grammarAccess.getReadWriteSymbolAccess().getEmptyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Machine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group__0__Impl
	rule__Machine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getAlphabetKeyword_0()); }

	'alphabet' 

{ after(grammarAccess.getMachineAccess().getAlphabetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group__1__Impl
	rule__Machine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getMachineAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group__2__Impl
	rule__Machine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getGroup_2()); }
(rule__Machine__Group_2__0)?
{ after(grammarAccess.getMachineAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group__3__Impl
	rule__Machine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getMachineAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMachineAccess().getStatesAssignment_4()); }
(rule__Machine__StatesAssignment_4)
{ after(grammarAccess.getMachineAccess().getStatesAssignment_4()); }
)
(
{ before(grammarAccess.getMachineAccess().getStatesAssignment_4()); }
(rule__Machine__StatesAssignment_4)*
{ after(grammarAccess.getMachineAccess().getStatesAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Machine__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group_2__0__Impl
	rule__Machine__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getSymbolsAssignment_2_0()); }
(rule__Machine__SymbolsAssignment_2_0)
{ after(grammarAccess.getMachineAccess().getSymbolsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getGroup_2_1()); }
(rule__Machine__Group_2_1__0)*
{ after(grammarAccess.getMachineAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Machine__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group_2_1__0__Impl
	rule__Machine__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getMachineAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getSymbolsAssignment_2_1_1()); }
(rule__Machine__SymbolsAssignment_2_1_1)
{ after(grammarAccess.getMachineAccess().getSymbolsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getBeginStateAssignment_0()); }
(rule__State__BeginStateAssignment_0)?
{ after(grammarAccess.getStateAccess().getBeginStateAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStateKeyword_1()); }

	'state' 

{ after(grammarAccess.getStateAccess().getStateKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameAssignment_2()); }
(rule__State__NameAssignment_2)
{ after(grammarAccess.getStateAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__3__Impl
	rule__State__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__4__Impl
	rule__State__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getTransactionsAssignment_4()); }
(rule__State__TransactionsAssignment_4)*
{ after(grammarAccess.getStateAccess().getTransactionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Transaction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group__0__Impl
	rule__Transaction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getTransactionAction_0()); }
(

)
{ after(grammarAccess.getTransactionAccess().getTransactionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group__1__Impl
	rule__Transaction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getGroup_1()); }
(rule__Transaction__Group_1__0)?
{ after(grammarAccess.getTransactionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group__2__Impl
	rule__Transaction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getGroup_2()); }
(rule__Transaction__Group_2__0)?
{ after(grammarAccess.getTransactionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group__3__Impl
	rule__Transaction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getGroup_3()); }
(rule__Transaction__Group_3__0)?
{ after(grammarAccess.getTransactionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group__4__Impl
	rule__Transaction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getAlternatives_4()); }
(rule__Transaction__Alternatives_4)?
{ after(grammarAccess.getTransactionAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getTransactionAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Transaction__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_1__0__Impl
	rule__Transaction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getReadingAssignment_1_0()); }
(rule__Transaction__ReadingAssignment_1_0)
{ after(grammarAccess.getTransactionAccess().getReadingAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTransactionAccess().getReadAssignment_1_1()); }
(rule__Transaction__ReadAssignment_1_1)
{ after(grammarAccess.getTransactionAccess().getReadAssignment_1_1()); }
)
(
{ before(grammarAccess.getTransactionAccess().getReadAssignment_1_1()); }
(rule__Transaction__ReadAssignment_1_1)*
{ after(grammarAccess.getTransactionAccess().getReadAssignment_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transaction__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_2__0__Impl
	rule__Transaction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getWritingAssignment_2_0()); }
(rule__Transaction__WritingAssignment_2_0)
{ after(grammarAccess.getTransactionAccess().getWritingAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTransactionAccess().getWriteAssignment_2_1()); }
(rule__Transaction__WriteAssignment_2_1)
{ after(grammarAccess.getTransactionAccess().getWriteAssignment_2_1()); }
)
(
{ before(grammarAccess.getTransactionAccess().getWriteAssignment_2_1()); }
(rule__Transaction__WriteAssignment_2_1)*
{ after(grammarAccess.getTransactionAccess().getWriteAssignment_2_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transaction__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_3__0__Impl
	rule__Transaction__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getMovingAssignment_3_0()); }
(rule__Transaction__MovingAssignment_3_0)
{ after(grammarAccess.getTransactionAccess().getMovingAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getAlternatives_3_1()); }
(rule__Transaction__Alternatives_3_1)
{ after(grammarAccess.getTransactionAccess().getAlternatives_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transaction__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_4_0__0__Impl
	rule__Transaction__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getNextAssignment_4_0_0()); }
(rule__Transaction__NextAssignment_4_0_0)
{ after(grammarAccess.getTransactionAccess().getNextAssignment_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getToStateAssignment_4_0_1()); }
(rule__Transaction__ToStateAssignment_4_0_1)
{ after(grammarAccess.getTransactionAccess().getToStateAssignment_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Machine__SymbolsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getSymbolsSymbolParserRuleCall_2_0_0()); }
	ruleSymbol{ after(grammarAccess.getMachineAccess().getSymbolsSymbolParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__SymbolsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getSymbolsSymbolParserRuleCall_2_1_1_0()); }
	ruleSymbol{ after(grammarAccess.getMachineAccess().getSymbolsSymbolParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__StatesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getStatesStateParserRuleCall_4_0()); }
	ruleState{ after(grammarAccess.getMachineAccess().getStatesStateParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Symbol__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolAccess().getNameSYMBOL_IDTerminalRuleCall_0()); }
	RULE_SYMBOL_ID{ after(grammarAccess.getSymbolAccess().getNameSYMBOL_IDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__BeginStateAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getBeginStateBeginKeyword_0_0()); }
(
{ before(grammarAccess.getStateAccess().getBeginStateBeginKeyword_0_0()); }

	'begin' 

{ after(grammarAccess.getStateAccess().getBeginStateBeginKeyword_0_0()); }
)

{ after(grammarAccess.getStateAccess().getBeginStateBeginKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__TransactionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getTransactionsTransactionParserRuleCall_4_0()); }
	ruleTransaction{ after(grammarAccess.getStateAccess().getTransactionsTransactionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__ReadingAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getReadingReadKeyword_1_0_0()); }
(
{ before(grammarAccess.getTransactionAccess().getReadingReadKeyword_1_0_0()); }

	'read' 

{ after(grammarAccess.getTransactionAccess().getReadingReadKeyword_1_0_0()); }
)

{ after(grammarAccess.getTransactionAccess().getReadingReadKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__ReadAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getReadReadWriteSymbolParserRuleCall_1_1_0()); }
	ruleReadWriteSymbol{ after(grammarAccess.getTransactionAccess().getReadReadWriteSymbolParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__WritingAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getWritingWriteKeyword_2_0_0()); }
(
{ before(grammarAccess.getTransactionAccess().getWritingWriteKeyword_2_0_0()); }

	'write' 

{ after(grammarAccess.getTransactionAccess().getWritingWriteKeyword_2_0_0()); }
)

{ after(grammarAccess.getTransactionAccess().getWritingWriteKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__WriteAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getWriteReadWriteSymbolParserRuleCall_2_1_0()); }
	ruleReadWriteSymbol{ after(grammarAccess.getTransactionAccess().getWriteReadWriteSymbolParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__MovingAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getMovingMoveKeyword_3_0_0()); }
(
{ before(grammarAccess.getTransactionAccess().getMovingMoveKeyword_3_0_0()); }

	'move' 

{ after(grammarAccess.getTransactionAccess().getMovingMoveKeyword_3_0_0()); }
)

{ after(grammarAccess.getTransactionAccess().getMovingMoveKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__MoveAssignment_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getMoveRightKeyword_3_1_0_0()); }
(
{ before(grammarAccess.getTransactionAccess().getMoveRightKeyword_3_1_0_0()); }

	'right' 

{ after(grammarAccess.getTransactionAccess().getMoveRightKeyword_3_1_0_0()); }
)

{ after(grammarAccess.getTransactionAccess().getMoveRightKeyword_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__MoveAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getMoveLeftKeyword_3_1_1_0()); }
(
{ before(grammarAccess.getTransactionAccess().getMoveLeftKeyword_3_1_1_0()); }

	'left' 

{ after(grammarAccess.getTransactionAccess().getMoveLeftKeyword_3_1_1_0()); }
)

{ after(grammarAccess.getTransactionAccess().getMoveLeftKeyword_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__NextAssignment_4_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getNextNextKeyword_4_0_0_0()); }
(
{ before(grammarAccess.getTransactionAccess().getNextNextKeyword_4_0_0_0()); }

	'next' 

{ after(grammarAccess.getTransactionAccess().getNextNextKeyword_4_0_0_0()); }
)

{ after(grammarAccess.getTransactionAccess().getNextNextKeyword_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__ToStateAssignment_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getToStateStateCrossReference_4_0_1_0()); }
(
{ before(grammarAccess.getTransactionAccess().getToStateStateIDTerminalRuleCall_4_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTransactionAccess().getToStateStateIDTerminalRuleCall_4_0_1_0_1()); }
)
{ after(grammarAccess.getTransactionAccess().getToStateStateCrossReference_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__FinalAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getFinalTerminateKeyword_4_1_0()); }
(
{ before(grammarAccess.getTransactionAccess().getFinalTerminateKeyword_4_1_0()); }

	'terminate' 

{ after(grammarAccess.getTransactionAccess().getFinalTerminateKeyword_4_1_0()); }
)

{ after(grammarAccess.getTransactionAccess().getFinalTerminateKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReadWriteSymbol__SymbolAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadWriteSymbolAccess().getSymbolSymbolCrossReference_0_0()); }
(
{ before(grammarAccess.getReadWriteSymbolAccess().getSymbolSymbolSYMBOL_IDTerminalRuleCall_0_0_1()); }
	RULE_SYMBOL_ID{ after(grammarAccess.getReadWriteSymbolAccess().getSymbolSymbolSYMBOL_IDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getReadWriteSymbolAccess().getSymbolSymbolCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReadWriteSymbol__EmptyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadWriteSymbolAccess().getEmptyTildeKeyword_1_0()); }
(
{ before(grammarAccess.getReadWriteSymbolAccess().getEmptyTildeKeyword_1_0()); }

	'~' 

{ after(grammarAccess.getReadWriteSymbolAccess().getEmptyTildeKeyword_1_0()); }
)

{ after(grammarAccess.getReadWriteSymbolAccess().getEmptyTildeKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_SYMBOL_ID : ('a'..'z'|'A'..'Z'|'0'..'9'|'-'|'+'|'*'|'/'|'^'|'.'|'|'|'&'|'='|'<'|'>'|'('|')'|'['|']');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


